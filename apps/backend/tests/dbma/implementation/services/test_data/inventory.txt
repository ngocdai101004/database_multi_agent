-- Inventory Schema Definition

-- Products table
CREATE TABLE products (
    product_id INT PRIMARY KEY,
    sku VARCHAR(50) UNIQUE,
    name VARCHAR(100),
    description TEXT,
    category VARCHAR(50),
    unit_price DECIMAL(10,2),
    reorder_point INT,
    target_stock_level INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Warehouses table
CREATE TABLE warehouses (
    warehouse_id INT PRIMARY KEY,
    name VARCHAR(100),
    location VARCHAR(200),
    capacity DECIMAL(10,2),
    manager_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Warehouse Zones table
CREATE TABLE warehouse_zones (
    zone_id INT PRIMARY KEY,
    warehouse_id INT,
    name VARCHAR(50),
    description TEXT,
    capacity DECIMAL(10,2),
    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id)
);

-- Stock Levels table
CREATE TABLE stock_levels (
    stock_id INT PRIMARY KEY,
    product_id INT,
    warehouse_id INT,
    zone_id INT,
    quantity INT,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (warehouse_id) REFERENCES warehouses(warehouse_id),
    FOREIGN KEY (zone_id) REFERENCES warehouse_zones(zone_id)
);

-- Suppliers table
CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY,
    name VARCHAR(100),
    contact_person VARCHAR(100),
    email VARCHAR(100),
    phone VARCHAR(20),
    address TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Purchase Orders table
CREATE TABLE purchase_orders (
    po_id INT PRIMARY KEY,
    supplier_id INT,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expected_delivery_date TIMESTAMP,
    status VARCHAR(20),
    total_amount DECIMAL(10,2),
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

-- Purchase Order Items table
CREATE TABLE po_items (
    po_item_id INT PRIMARY KEY,
    po_id INT,
    product_id INT,
    quantity INT,
    unit_price DECIMAL(10,2),
    FOREIGN KEY (po_id) REFERENCES purchase_orders(po_id),
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Stock Movements table
CREATE TABLE stock_movements (
    movement_id INT PRIMARY KEY,
    product_id INT,
    from_warehouse_id INT,
    to_warehouse_id INT,
    from_zone_id INT,
    to_zone_id INT,
    quantity INT,
    movement_type VARCHAR(20),
    movement_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    reference_id VARCHAR(50),
    FOREIGN KEY (product_id) REFERENCES products(product_id),
    FOREIGN KEY (from_warehouse_id) REFERENCES warehouses(warehouse_id),
    FOREIGN KEY (to_warehouse_id) REFERENCES warehouses(warehouse_id),
    FOREIGN KEY (from_zone_id) REFERENCES warehouse_zones(zone_id),
    FOREIGN KEY (to_zone_id) REFERENCES warehouse_zones(zone_id)
);

-- Create indexes
CREATE INDEX idx_products_sku ON products(sku);
CREATE INDEX idx_stock_levels_product ON stock_levels(product_id);
CREATE INDEX idx_stock_levels_warehouse ON stock_levels(warehouse_id);
CREATE INDEX idx_purchase_orders_supplier ON purchase_orders(supplier_id);
CREATE INDEX idx_stock_movements_product ON stock_movements(product_id);
CREATE INDEX idx_stock_movements_date ON stock_movements(movement_date); 